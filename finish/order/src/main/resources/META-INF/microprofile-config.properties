
#liberty kafka connector
# tag::kafkaConfig[]
mp.messaging.connector.liberty-kafka.bootstrap.servers=localhost:9093
# end::kafkaConfig[]

# tag::foodStream[]
#food stream
mp.messaging.outgoing.food.connector=liberty-kafka
mp.messaging.outgoing.food.topic=foodTopic
mp.messaging.outgoing.food.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.food.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# end::foodStream[]

# tag::bevStream[]
#beverage stream
mp.messaging.outgoing.beverage.connector=liberty-kafka
mp.messaging.outgoing.beverage.topic=beverageTopic
mp.messaging.outgoing.beverage.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.beverage.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# end::bevStream[]

# tag::updateStatus[]
#updateStatus stream
mp.messaging.incoming.updateStatus.connector=liberty-kafka
mp.messaging.incoming.updateStatus.topic=statusTopic
mp.messaging.incoming.updateStatus.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.updateStatus.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.updateStatus.group.id=update-status
# end::updateStatus[]